name: Test and Analyze Spring Boot Project (Unit Only)

on:
  workflow_dispatch:
  push:
    branches:
      - develop
  pull_request:
    types: [opened, synchronize, reopened]


jobs:
  build-and-analyze:
    name: Build and Analyze Backend
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_DB: ecocharger
          POSTGRES_USER: ecocharger
          POSTGRES_PASSWORD: ecocharger
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U ecocharger" 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Write .env file
        run: |
          cat <<EOF > .env
          SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/ecocharger
          SPRING_DATASOURCE_USERNAME=ecocharger
          SPRING_DATASOURCE_PASSWORD=ecocharger
          EOF

      - name: Write test application.properties
        run: |
          mkdir -p backend/src/test/resources
          cat <<EOF > backend/src/test/resources/application.properties
          spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
          spring.datasource.driver-class-name=org.h2.Driver
          spring.datasource.username=sa
          spring.datasource.password=
          spring.sql.init.mode=never
          spring.flyway.enabled=true  
          spring.flyway.locations=classpath:db/migration
          spring.flyway.clean-disabled=false
          spring.flyway.baseline-on-migrate=true
          spring.flyway.check-location=false
          spring.jpa.hibernate.ddl-auto=none
          spring.jpa.defer-datasource-initialization=false
          spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration
          spring.security.enabled=false
          jwt.secret=test-secret-key
          EOF

      - name: Write runtime application.properties
        run: |
          mkdir -p backend/src/main/resources
          cat <<EOF > backend/src/main/resources/application.properties
          spring.application.name=ecocharger
          spring.datasource.url=jdbc:postgresql://db:5432/ecocharger
          spring.datasource.username=ecocharger
          spring.datasource.password=ecocharger
          spring.datasource.driver-class-name=org.postgresql.Driver
          spring.jpa.show-sql=true
          spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
          spring.jpa.hibernate.ddl-auto=create
          spring.sql.init.data-locations=classpath:data.sql
          spring.sql.init.mode=always
          spring.sql.init.continue-on-error=false
          spring.sql.init.platform=postgres
          spring.jpa.defer-datasource-initialization=true
          spring.flyway.enabled=false
          springdoc.swagger-ui.path=/swagger-ui-custom.html
          springdoc.api-docs.path=/api-docs
          jwt.secret=xg7!X@rT#98sdufKL2l7lfksm10*4dlfj34&89#fKlasdf4!dskf
          EOF

      - name: Run full verification lifecycle
        working-directory: ./backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          XRAY_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
          XRAY_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
        run: >
          mvn verify -Punit-tests
          -Dxray.clientId=${XRAY_CLIENT_ID}
          -Dxray.clientSecret=${XRAY_CLIENT_SECRET}

      - name: Run SonarCloud analysis
        working-directory: ./backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          mvn sonar:sonar
          -Dsonar.login=${SONAR_TOKEN}
          -Dsonar.projectKey=TQS-EcoCharger_TQS_EcoCharger
          -Dsonar.organization=tqs-ecocharger
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml