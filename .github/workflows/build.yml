name: Test and Analyze Spring Boot Project

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build-and-analyze:
    name: Build and Analyze with SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Write test application.properties
        run: |
          mkdir -p backend/src/test/resources
          cat <<EOF > backend/src/test/resources/application.properties
          spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
          spring.datasource.driver-class-name=org.h2.Driver
          spring.datasource.username=sa
          spring.datasource.password=
          spring.jpa.hibernate.ddl-auto=none
          spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
          spring.flyway.enabled=true
          spring.flyway.locations=classpath:db/migration
          spring.flyway.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1
          spring.flyway.user=sa
          spring.flyway.password=
          EOF

      - name: Build and analyze with SonarCloud
        working-directory: ./backend
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=TQS-EcoCharger_TQS_EcoCharger
          
      - name: Run tests
        working-directory: ./backend
        run: mvn test
      - name: Push results to Xray on Jira Cloud
        if: always()
        env:
          XRAYCLOUD_CLIENT_ID: ${{ secrets.XRAY_CLIENT_ID }}
          XRAYCLOUD_CLIENT_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}
          REVISION: ${{ github.ref_name }}
          TEST_ENVIRONMENT: java-${{ matrix.java }}
        run: |
          mvn \
            -Dxray.clientId=${XRAY_CLIENT_ID} \
            -Dxray.clientSecret=${XRAY_CLIENT_SECRET} \
            -Dxray.testEnvironment="${TEST_ENVIRONMENT}" \
            app.getxray:xray-maven-plugin:0.8.0:import-results
