{"uuid":"11625319-4d47-487e-9e9c-f3b638f46186","historyId":"889579bfa54a2ac539de3cda1810dd48","testCaseId":"[engine:junit-jupiter]/[class:pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT]/[method:testCreateReservationInvalidInput()]","testCaseName":"Create reservation - invalid input","fullName":"pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT.testCreateReservationInvalidInput","labels":[{"name":"junit.platform.uniqueid","value":"[engine:junit-jupiter]/[class:pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT]/[method:testCreateReservationInvalidInput()]"},{"name":"host","value":"alof-IdeaPad-5-14IAL7"},{"name":"thread","value":"108966@alof-IdeaPad-5-14IAL7.main(1)"},{"name":"framework","value":"junit-platform"},{"name":"language","value":"java"},{"name":"package","value":"pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT"},{"name":"testClass","value":"pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT"},{"name":"testMethod","value":"testCreateReservationInvalidInput"},{"name":"suite","value":"pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT"}],"links":[],"name":"Create reservation - invalid input","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"could not prepare statement [Syntax error in SQL statement \"select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.[*]year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?\"; expected \"identifier\"; SQL statement:\nselect u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=? [42001-232]] [select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?]; SQL [select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?]","trace":"org.springframework.dao.InvalidDataAccessResourceUsageException: could not prepare statement [Syntax error in SQL statement \"select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.[*]year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?\"; expected \"identifier\"; SQL statement:\nselect u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=? [42001-232]] [select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?]; SQL [select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?]\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.convertHibernateAccessException(HibernateJpaDialect.java:277)\n\tat org.springframework.orm.jpa.vendor.HibernateJpaDialect.translateExceptionIfPossible(HibernateJpaDialect.java:241)\n\tat org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.translateExceptionIfPossible(AbstractEntityManagerFactoryBean.java:560)\n\tat org.springframework.dao.support.ChainedPersistenceExceptionTranslator.translateExceptionIfPossible(ChainedPersistenceExceptionTranslator.java:61)\n\tat org.springframework.dao.support.DataAccessUtils.translateIfNecessary(DataAccessUtils.java:343)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:160)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:165)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:223)\n\tat jdk.proxy2/jdk.proxy2.$Proxy193.deleteAll(Unknown Source)\n\tat pt.ua.tqs.ecocharger.ecocharger.integration.ReservationControllerTestIT.setUp(ReservationControllerTestIT.java:51)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\nCaused by: org.hibernate.exception.SQLGrammarException: could not prepare statement [Syntax error in SQL statement \"select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.[*]year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?\"; expected \"identifier\"; SQL statement:\nselect u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=? [42001-232]] [select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?]\n\tat org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:66)\n\tat org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:58)\n\tat org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:108)\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:191)\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:153)\n\tat org.hibernate.sql.exec.internal.StandardStatementCreator.createStatement(StandardStatementCreator.java:49)\n\tat org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.executeQuery(DeferredResultSetAccess.java:235)\n\tat org.hibernate.sql.results.jdbc.internal.DeferredResultSetAccess.getResultSet(DeferredResultSetAccess.java:171)\n\tat org.hibernate.sql.results.jdbc.internal.JdbcValuesResultSetImpl.<init>(JdbcValuesResultSetImpl.java:74)\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.resolveJdbcValuesSource(JdbcSelectExecutorStandardImpl.java:355)\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:137)\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)\n\tat org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:145)\n\tat org.hibernate.loader.ast.internal.SingleIdLoadPlan.load(SingleIdLoadPlan.java:117)\n\tat org.hibernate.loader.ast.internal.SingleIdEntityLoaderStandardImpl.load(SingleIdEntityLoaderStandardImpl.java:74)\n\tat org.hibernate.persister.entity.AbstractEntityPersister.doLoad(AbstractEntityPersister.java:3895)\n\tat org.hibernate.persister.entity.AbstractEntityPersister.load(AbstractEntityPersister.java:3884)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.loadFromDatasource(DefaultLoadEventListener.java:604)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.loadFromCacheOrDatasource(DefaultLoadEventListener.java:590)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:560)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.doLoad(DefaultLoadEventListener.java:544)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.load(DefaultLoadEventListener.java:206)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.loadWithRegularProxy(DefaultLoadEventListener.java:289)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.proxyOrLoad(DefaultLoadEventListener.java:241)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.doOnLoad(DefaultLoadEventListener.java:110)\n\tat org.hibernate.event.internal.DefaultLoadEventListener.onLoad(DefaultLoadEventListener.java:69)\n\tat org.hibernate.event.service.internal.EventListenerGroupImpl.fireEventOnEachListener(EventListenerGroupImpl.java:138)\n\tat org.hibernate.internal.SessionImpl.fireLoadNoChecks(SessionImpl.java:1229)\n\tat org.hibernate.internal.SessionImpl.internalLoad(SessionImpl.java:1075)\n\tat org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.initialize(EntitySelectFetchInitializer.java:236)\n\tat org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.resolveInstance(EntitySelectFetchInitializer.java:153)\n\tat org.hibernate.sql.results.graph.entity.internal.EntitySelectFetchInitializer.resolveInstance(EntitySelectFetchInitializer.java:44)\n\tat org.hibernate.sql.results.internal.StandardRowReader.coordinateInitializers(StandardRowReader.java:239)\n\tat org.hibernate.sql.results.internal.StandardRowReader.readRow(StandardRowReader.java:141)\n\tat org.hibernate.sql.results.spi.ListResultsConsumer.read(ListResultsConsumer.java:249)\n\tat org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:201)\n\tat org.hibernate.sql.results.spi.ListResultsConsumer.consume(ListResultsConsumer.java:35)\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.doExecuteQuery(JdbcSelectExecutorStandardImpl.java:224)\n\tat org.hibernate.sql.exec.internal.JdbcSelectExecutorStandardImpl.executeQuery(JdbcSelectExecutorStandardImpl.java:102)\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.executeQuery(JdbcSelectExecutor.java:91)\n\tat org.hibernate.sql.exec.spi.JdbcSelectExecutor.list(JdbcSelectExecutor.java:165)\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.lambda$new$1(ConcreteSqmSelectQueryPlan.java:152)\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.withCacheableSqmInterpretation(ConcreteSqmSelectQueryPlan.java:442)\n\tat org.hibernate.query.sqm.internal.ConcreteSqmSelectQueryPlan.performList(ConcreteSqmSelectQueryPlan.java:362)\n\tat org.hibernate.query.sqm.internal.QuerySqmImpl.doList(QuerySqmImpl.java:380)\n\tat org.hibernate.query.spi.AbstractSelectionQuery.list(AbstractSelectionQuery.java:143)\n\tat org.hibernate.query.Query.getResultList(Query.java:120)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.findAll(SimpleJpaRepository.java:395)\n\tat org.springframework.data.jpa.repository.support.SimpleJpaRepository.deleteAll(SimpleJpaRepository.java:294)\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\n\tat org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:359)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker$RepositoryFragmentMethodInvoker.lambda$new$0(RepositoryMethodInvoker.java:277)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.doInvoke(RepositoryMethodInvoker.java:170)\n\tat org.springframework.data.repository.core.support.RepositoryMethodInvoker.invoke(RepositoryMethodInvoker.java:158)\n\tat org.springframework.data.repository.core.support.RepositoryComposition$RepositoryFragments.invoke(RepositoryComposition.java:515)\n\tat org.springframework.data.repository.core.support.RepositoryComposition.invoke(RepositoryComposition.java:284)\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport$ImplementationMethodExecutionInterceptor.invoke(RepositoryFactorySupport.java:731)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.doInvoke(QueryExecutorMethodInterceptor.java:174)\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.invoke(QueryExecutorMethodInterceptor.java:149)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:69)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:380)\n\tat org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)\n\tat org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)\n\tat org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:138)\n\t... 9 more\nCaused by: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement \"select u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.[*]year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=?\"; expected \"identifier\"; SQL statement:\nselect u1_0.id,case when u1_1.id is not null then 1 when u1_0.id is not null then 0 end,u1_0.email,u1_0.enabled,u1_0.name,u1_0.password,c1_0.driver_id,c1_0.id,c1_0.battery_capacity,c1_0.battery_level,c1_0.consumption,c1_0.enabled,c1_0.kilometers,c1_0.license_plate,c1_0.make,c1_0.model,c1_0.name,c1_0.year from users u1_0 left join driver u1_1 on u1_0.id=u1_1.id left join car c1_0 on u1_1.id=c1_0.driver_id where u1_0.id=? [42001-232]\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:514)\n\tat org.h2.message.DbException.getJdbcSQLException(DbException.java:489)\n\tat org.h2.message.DbException.getSyntaxError(DbException.java:261)\n\tat org.h2.command.Parser.readIdentifier(Parser.java:5527)\n\tat org.h2.command.Parser.readTermObjectDot(Parser.java:4792)\n\tat org.h2.command.Parser.readTermWithIdentifier(Parser.java:5144)\n\tat org.h2.command.Parser.readTerm(Parser.java:4828)\n\tat org.h2.command.Parser.readFactor(Parser.java:3323)\n\tat org.h2.command.Parser.readSum(Parser.java:3310)\n\tat org.h2.command.Parser.readConcat(Parser.java:3275)\n\tat org.h2.command.Parser.readCondition(Parser.java:3065)\n\tat org.h2.command.Parser.readExpression(Parser.java:2985)\n\tat org.h2.command.Parser.parseSelectExpressions(Parser.java:2785)\n\tat org.h2.command.Parser.parseSelect(Parser.java:2803)\n\tat org.h2.command.Parser.parseQueryPrimary(Parser.java:2692)\n\tat org.h2.command.Parser.parseQueryTerm(Parser.java:2547)\n\tat org.h2.command.Parser.parseQueryExpressionBody(Parser.java:2526)\n\tat org.h2.command.Parser.parseQueryExpressionBodyAndEndOfQuery(Parser.java:2519)\n\tat org.h2.command.Parser.parseQueryExpression(Parser.java:2512)\n\tat org.h2.command.Parser.parseQuery(Parser.java:2479)\n\tat org.h2.command.Parser.parsePrepared(Parser.java:610)\n\tat org.h2.command.Parser.parse(Parser.java:581)\n\tat org.h2.command.Parser.parse(Parser.java:556)\n\tat org.h2.command.Parser.prepareCommand(Parser.java:484)\n\tat org.h2.engine.SessionLocal.prepareLocal(SessionLocal.java:645)\n\tat org.h2.engine.SessionLocal.prepareCommand(SessionLocal.java:561)\n\tat org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1164)\n\tat org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:93)\n\tat org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:687)\n\tat com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:342)\n\tat com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$4.doPrepare(StatementPreparerImpl.java:151)\n\tat org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:180)\n\t... 75 more\n"},"stage":"finished","description":"","steps":[],"attachments":[],"parameters":[],"start":1748541294223,"stop":1748541294243}