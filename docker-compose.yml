version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - observability

  frontend:
    build: ./frontend
    ports:
      - "5000:5000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host
    volumes:
      - ./frontend:/app
      - /app/node_modules
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5000 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - observability



  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: ecocharger
      POSTGRES_USER: ecocharger
      POSTGRES_PASSWORD: ecocharger
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ecocharger"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - observability
      
volumes:
  postgres-data:


networks:
  observability:
  default:
    name: default_network
