version: "3.8"

services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    env_file: .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - observability

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host
    volumes:
      - ./meal-booking-frontend:/app
      - /app/node_modules
    networks:
      - observability

  db:
    image: mysql:8.0
    restart: always
    ports:
      - "3306:3306"
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - observability

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    command:
      - --web.enable-remote-write-receiver
      - --enable-feature=native-histograms
      - --config.file=/etc/prometheus/prometheus.yaml
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    networks:
      - observability

  grafana:
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3005:3005"
    environment:
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_BASIC_ENABLED=false
    volumes:
      - ./config/grafana:/etc/grafana/provisioning/
    networks:
      - observability

volumes:
  mysql-data:

networks:
  observability:
  default:
    name: default_network
